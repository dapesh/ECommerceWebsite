@model AppUser
<style>
    .star {
  font-size: 24px;
  cursor: pointer;
  color: #ccc;
}

.star:hover,
.star.active {
  color: #f8d200;
}

</style>
<div class="card">
    <div class="card-header">
        User Profile
    </div>
    <div class="card-body">
        <h5 class="card-title">@Model.Username</h5>
        <p class="card-text">Email: @Model.Email</p>
        <p class="card-text">Bio: @Model.PhoneNumber</p>
        <form asp-action="AddRating" asp-controller="UserRating" asp-route-ratedUserId="@ViewBag.RatedUserId" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <div class="form-group">
                <label for="Rating">Rating</label>
                <input type="hidden" id="SelectedRating" name="SelectedRating" value="0" />
                <div id="rating-container">
                    @{
                        double averageRating = ViewBag.AverageRating;
                        for (int i = 1; i <= 5; i++)
                        {
                            if (i <= averageRating)
                            {
                                <span class="star active" data-rating="@i">★</span>
                            }
                            else
                            {
                                <span class="star" data-rating="@i">★</span>
                            }
                        }
                    }
                </div>

            </div>
            <div class="form-group">
                <label for="Comment">Comment</label>
                <textarea class="form-control" id="Comment" name="Comment" rows="3"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Submit Rating</button>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const stars = document.querySelectorAll(".star");
        const ratingContainer = document.getElementById("rating-container");
        const selectedRatingInput = document.getElementById("SelectedRating");

        stars.forEach((star) => {
            star.addEventListener("click", () => {
                const rating = parseInt(star.getAttribute("data-rating"));
                selectedRatingInput.value = rating; // Update the hidden input with the selected rating

                // You can also mark the selected stars as active if desired
                stars.forEach((s) => {
                    const sRating = parseInt(s.getAttribute("data-rating"));
                    if (sRating <= rating) {
                        s.classList.add("active");
                    } else {
                        s.classList.remove("active");
                    }
                });
            });
        });
    });

</script>